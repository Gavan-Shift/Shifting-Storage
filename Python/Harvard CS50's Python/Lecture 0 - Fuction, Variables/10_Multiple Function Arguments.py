# 📌 핵심 메시지
# print()는 여러 인수를 받으며, 기본 구분자는 공백
# sep, end 등의 매개변수로 출력 형식을 제어할 수 있음

# 1. Outline

print("hello", "world")
print("hello", "world", sep="...")
print("hello", end="")
print("world")

#######################################################################

# 2. 같은 줄 출력을 통해 가독성 확보
# [문제 상황] "hello,"와 name이 다른 줄에 출력된다.
# [시도] 같은 줄에 출력함으로써 가독성을 높이고 싶다.

# Ask user for their name
name = input("What's your name? ")

# Say hello to user
print("hello," + name)

#######################################################################

# 3) Third - 띄어쓰기를 통해 가독성 확보
# [문제 상황] "hello,"와 name가 붙어있어 가독성이 좋지 않다.
# [시도] ","뒤에 띄어쓰기를 넣어주고 싶다.

name = input("What's your name? ")
print("hello, " + name)

#######################################################################

# 4) Fourth - +와 ,의 차이
# 함수의 인수(입력)를 쉼표로 구분하면, 여러 개의 정보를 전달할 수 있다.
#이에 해당하는 인수는 변수도 문장도 포함한다.

# [확인] + → ,로 변경하여도 같은 출력이 나오는지 확인해보자.

name = input("What's your name? ")
print("hello, ", name)

# [결과] hello, 와 name 사이에 공백이 한 칸 더 생겼다.

#######################################################################

# [시도] 작성 시, "," 다음에 공백을 두면 안될 것 같다.

name = input("What's your name? ")
print("hello, ",name)

# [결과] Terminal 상의 결과가 같다.
# [추측] 명령문 작성 시, 공백의 문제가 아닌거 같다.

#######################################################################

# [시도] 모든 공백을 없애보겠다.

name = input("What's your name? ")
print("hello,",name)

# [결론] "+"를 통한 다수의 인수 삽입 시 : 공백 자동삽입 X
# ","를 통한 다수의 인수 삽입 시 : 공백 자동삽입 O

#######################################################################

# 4) 공백의 이유
name = input("What's yout name? ")

# 위 명령문에서 노란색 부분에 공백을 넣어둔 이유는 사용자의 커서를
# 한 칸 오른쪽으로 옮기기 위함이다.

#######################################################################
